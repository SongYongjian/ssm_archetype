<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
    <!-- 1.配置jdbc文件 -->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations" value="classpath:spring/config.properties"/>
    </bean>


    <!-- 2.扫描的包路径，这里不扫描被@Controller注解的类 --><!--使用<context:component-scan/> 可以不在配置<context:annotation-config/> -->
    <context:component-scan base-package="com.hand.hls">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <import resource="classpath:spring/spring-mybatis.xml"/>
    <!--3. 启用@AsjectJ支持-->
    <aop:aspectj-autoproxy/>

    <!--4. 配置redis -->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE"/>
        <property name="ignoreResourceNotFound" value="true"/>
        <property name="locations">
            <list>
                <value>classpath:spring/config.properties</value>
            </list>
        </property>
    </bean>
    <import resource="spring-redis.xml"/>


    <!--5. 配置quartz 定时任务 -->

    <!-- 静态job配置 start-->
    <!-- 增加一个线程池 线程执行器配置，用于任务注册 -->
    <bean id="executor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <property name="corePoolSize" value="10"/>
        <property name="maxPoolSize" value="100"/>
        <property name="queueCapacity" value="500"/>
    </bean>

    <!-- 定时计划 业务对象 -->
    <bean id="bizObject" class="com.hand.hls.util.component.ExpireJobTask"/>

    <!-- 定时计划 调度业务 -->
    <bean id="jobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="bizObject"/>
        <property name="targetMethod" value="doBiz"/>
    </bean>

    <!--定时计划 增加调度触发器 从10秒开始，每1分钟执行一次-->
    <bean id="cronTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="jobDetail"/>
        <property name="cronExpression" value="10 0/1 * * * ?"/>
    </bean>

    <!--定时计划 增加调度-->
    <bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <ref bean="cronTrigger"/>
            </list>
        </property>
        <property name="taskExecutor" ref="executor"/>
    </bean>
    <!-- 静态job配置 end-->


    <!-- 动态job 配置 start-->
    <!-- ==========动态添加任务START========== -->
    <!-- 注入StdSchedulerFactory 注入这个类可以使用quartz.properties配置文件 -->
    <bean id="stdSchedulerFactory" class="org.quartz.impl.StdSchedulerFactory"/>
    <!-- 注册SpringContextUtil用于获取ApplicationContext -->
    <bean id="springContextUtil" class="com.hand.hls.util.component.SpringContextUtil"></bean>
    <!-- 注册QuartzJobFactory -->
    <bean id="quartzJobFactory" class="com.hand.hls.util.component.QuartzJobFactory"></bean>

    <!-- 主定时计划 延迟一秒启动，每6秒执行一次-->
    <bean id="managerTriggerBean"
          class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">
        <property name="jobDetail" ref="methodInvokingJobDetailFactoryBean"/>
        <!-- 延迟启动 -->
        <property name="startDelay" value="1000"></property>
        <property name="repeatInterval" value="6000"></property>
    </bean>


    <!-- 注册SchedulerFactoryBean -->
    <bean id="schedulerFactoryBean"
          class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <ref bean="managerTriggerBean"/>
            </list>
        </property>
    </bean>

    <!-- jobDetail -->
    <bean id="methodInvokingJobDetailFactoryBean"
          class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="quartzJobFactory"/>
        <property name="targetMethod" value="arrageScheduleJob"/>
    </bean>
    <!-- 动态job 配置 end-->


</beans>